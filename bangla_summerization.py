# -*- coding: utf-8 -*-
"""Bangla summerization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TsV8AbAajW9tqebIGY4lVjHoTVjsHBHX
"""

text=""" সাধারণত পড়াশোনার ক্ষেত্রে ছেলেদের পিছিয়ে পড়ার পেছনে মোবাইল ফোন, ইলেকট্রনিক ডিভাইস ও সামাজিক যোগাযোগমাধ্যমে মাত্রাতিরিক্ত সময় ব্যয় করা প্রধানত দায়ী হতে পারে। ছেলেরা বাইরে ঘোরাঘুরির পাশাপাশি বাসায় ফিরে মোবাইল ফোনে ডুবে যাচ্ছে। স্কুলপড়ুয়ারা অতি মাত্রায় সামাজিক যোগাযোগমাধ্যম ব্যবহার করায় পড়ালেখায় মনোযোগী হতে পারছে না। এমনকি  ছাত্রীদের চেয়ে ছাত্ররা মোবাইল ফোন ব্যবহারের বেশি সুযোগ পাচ্ছে। পাশাপাশি কিশোর অপরাধে জড়িয়ে পড়াও ছেলেদের পিছিয়ে পড়ার অন্যতম কারণ। ছাত্রীদের মধ্যে তারা পড়াশোনায় বেশি আগ্রহ দেখছেন। আর ছেলে সন্তানদের চেয়ে মেয়েরা পড়াশোনায় আগ্রহী হয়ে ওঠায় তাদের পড়াশোনায় বেশি গুরুত্ব দিচ্ছেন বাবা-মাও। এমনকি মেয়েদের লেখাপড়ায় অভিভাবকরা বেশি ব্যয় করতেও দ্বিধা করছেন না।
সচেতন মহল মনে করছেন, স্কুলপড়ুয়া ছেলেটার হাতে বাবা-মা মোবাইল তুলে দিচ্ছে। কিন্তু মেয়েটার হাতে দিচ্ছে না। হয়তো অন্য কোনো চিন্তা থেকে দিচ্ছে না। তাতে মেয়েটা পড়াশোনায় মনোযোগ দিচ্ছে। আর ছেলেটা ফেসবুক, গেমিংয়ে সেটা ব্যবহার করছে। এভাবে ছেলেরা পড়ালেখায় ক্রমে চরম অমনোযোগী হয়ে পড়ছে।’ অতি মাত্রায় সামাজিক যোগাযোগমাধ্যম ব্যবহারে স্কুলপড়ুয়া শিক্ষার্থীরা পড়ালেখায় অমনোযোগী হয়ে পড়ছে।
"""

import pandas as pd

file="/content/drive/MyDrive/stopwords_bangla.xlsx"

df=pd.read_excel(file)

print(df)

column_name='words'
stopwords = df[column_name].tolist()
print(stopwords)

from string import punctuation

print(punctuation)

!pip install banglanltk

import banglanltk as bn
s = 'আজ আকাশ পরিষ্কার!!! মনে হয় আজ আর বৃষ্টি হবে না .........!'

print(bn.clean_text(s))

doc=bn.clean_text(text)
print(doc)

tokenlist=bn.word_tokenize(doc)
print(tokenlist)

tokenf = []
for token in tokenlist:
    if token not in stopwords:
        tokenf.append(token)
print(tokenf)

word_frequency={}
for word in tokenf:
  if word not in word_frequency.keys():
    word_frequency[word]=1
  else:
    word_frequency[word]+=1

print(word_frequency)

max_fre=max(word_frequency.values())
print(max_fre)

for word in word_frequency.keys():
  word_frequency[word]=word_frequency[word]/max_fre

print(word_frequency)

sent_token=text.split("।")
print(sent_token)

filtered_list = [i for i in sent_token if i != "\n"]
print(filtered_list)

sent_score={}
for sent in filtered_list:
  words=sent.split()
  for word in words:
    if word in word_frequency.keys():
      if word not in sent_score:
        sent_score[sent]=word_frequency[word]
      else:
        sent_score[sent]+=word_frequency[word]

print(sent_score)

from heapq import nlargest

select_length=int(len(sent_token)*0.3)
select_length



final=nlargest(select_length,sent_score,key=sent_score.get)
summary="।".join(final)
print(text)
print("Summary:",summary)

